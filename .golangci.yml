run:
  skip-dirs:
    - vendor
  modules-download-mode: mod

linters:
  disable-all: true
  enable:
    - asciicheck
    - bodyclose
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exportloopref
    - forcetypeassert
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomoddirectives
    - gomodguard
    - gomnd
    - gosec
    - gosimple
    - govet
    - importas
    - ineffassign
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - noctx
    - paralleltest
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - unconvert
    - unused
    - unparam
    - wastedassign
    - wrapcheck
    - whitespace
    - wsl

issues:
  # Restricts maximum count of issues to display with the same text, and show all instead.
  max-same-issues: 0
  max-issues-per-linter: 0
  exclude:
    - Line contains TODO/BUG/FIXME

linters-settings:
  tagliatelle:
    # Check the struck tag name case.
    case:
      # Use the struct field name to check the name of the struct tag.
      # Default: false
      use-field-name: true
      rules:
        json: snake
  varnamelen:
    # The longest distance, in source lines, that is being considered a "small scope".
    # Variables used in at most this many lines will be ignored.
    # Default: 5
    max-distance: 20
    # The minimum length of a variable's name that is considered "long".
    # Variable names that are at least this long will be ignored.
    # Default: 3
    min-name-length: 2
    # Check method receivers.
    # Default: false
    check-receiver: true
    # Check named return values.
    # Default: false
    check-return: true
    # Check type parameters.
    # Default: false
    check-type-param: true
    # Optional list of variable names that should be ignored completely.
    # Default: []
    ignore-names:
      - err
    # Optional list of variable declarations that should be ignored completely.
    # Entries must be in one of the following forms (see below for examples):
    # - for variables, parameters, named return values, method receivers, or type parameters:
    #   <name> <type>  (<type> can also be a pointer/slice/map/chan/...)
    # - for constants: const <name>
    #
    # Default: []
    ignore-decls:
      - w http.ResponseWriter
      - r *http.Request
  wsl:
    # Allow multiple var/declaration statements to be cuddled.
    # Default: false
    allow-cuddle-declarations: true
    # Causes an error when an If statement that checks an error variable doesn't
    # cuddle with the assignment of that variable.
    # Default: false
    enforce-err-cuddling: true
  wrapcheck:
    ignorePackageGlobs:
      - google.golang.org/grpc/status
